<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:mycharts="http://xmlns.jcp.org/jsf/composite/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:c="http://java.sun.com/jsp/jstl/core">

    <!--The generated HTML representation of the dialog component is namely during page
     load by JavaScript relocated to the end of <body> in order to improve cross browser
      compatibility of presenting a modal dialog.

    With your current code, this thus means that the dialog
    will then not sit in a form anymore. So when you try to
     submit the input values inside the dialog, they will end
     up as nulls because there is no form in order to collect
     and send the input values to the server.-->

    <p:toolbar id="dashboardToolbar">
        <f:facet name="left">
            <h:outputText value="#{dashboardBean.currentDashboard.dashboardName}"/>

            <span class="ui-separator">
                <span class="ui-icon ui-icon-grip-dotted-vertical"/>
            </span>

            <p:commandButton value="Add widget"
                             icon="fa fa-plus"
                             oncomplete="PF('chartSettingDialog').show()"/>
        </f:facet>

        <f:facet name="right">
            <p:commandButton value="Save"
                             onclick="saveChartState();"
                             type="submit"
                             disabled="true"/>
            <p:commandButton value="Delete dashboard"
                             actionListener="#{dashboardBean.deleteDashboard(dashboardBean.currentDashboard)}"
                             action="#{navigationBean.setPageName('charts/dashboardSettings')}"
                             icon="fa fa-remove"
                             update="centerForm, menu" immediate="true"/>
            <p:commandButton value="Back"
                             action="#{navigationBean.setPageName('charts/dashboardSettings')}"
                             update="centerForm"
                             icon="fa fa-level-up "
                             rendered="#{dashboardBean.fromDashboard}"/>
        </f:facet>

    </p:toolbar>


    <div class="gridster">
        <ul>

            <c:forEach items="#{chartBean.chartConf}" var="chart">
                <li id="li_component#{chart.chartId}" data-row="1" data-col="1" data-sizex="3" data-sizey="4">
                    <header class="x-tree-icon-leaf"></header>
                    <p:commandLink id="button_component#{chart.chartId}"
                                   title="Remove chart"
                                   actionListener="#{chartBean.removeChart(chart)}"
                                   styleClass="fa fa-remove delete-chart-button"/>
                    <mycharts:mychart id="component#{chart.chartId}"
                                      chartOptions="#{chart.chartOption}"
                                      requestDataOptions="#{chart.requestOption}"
                                      refreshInterval="#{chart.refreshInterval}"/>
                </li>
            </c:forEach>
        </ul>
    </div>


    <p:dialog header="Chart settings" widgetVar="chartSettingDialog" resizable="false">
        <h:form id="chartSettings">
            <div class="alert-block">
                <p:messages id="messages" autoUpdate="true" showDetail="true" closable="true" globalOnly="true"
                            showIcon="false"
                            styleClass="alert"/>
                <p:message for="refreshInterval" display="text" styleClass="alert"/>
            </div>
            <h:panelGrid id="sub" columns="2" cellpadding="0">
                <h:outputLabel for="refreshInterval" value="Refresh interval(minutes):"/>
                <p:inputText id="refreshInterval" value="#{chartBean.refreshInterval}"
                             converterMessage="Please enter digits only." required="true"
                             requiredMessage="The field is required!" styleClass="dialog-input-chart">
                    <p:clientValidator/>
                </p:inputText>
                <h:outputLabel for="chartType" value="Chart type:"/>
                <p:selectOneMenu id="chartType"
                                 value="#{chartBean.selectedChartType}"
                                 label="Select type"
                                 styleClass="one-dialog-select">
                    <f:selectItems value="#{chartBean.chartTypes}"
                                   var="chartType"
                                   itemValue="#{chartType}"
                                   itemLabel="#{chartType.toString()}"/>
                </p:selectOneMenu>
                <h:outputLabel for="chartInterval" value="Chart interval :"/>
                <p:selectOneMenu id="chartInterval"
                                 value="#{chartBean.selectedChartInterval}"
                                 label="Select interval"
                                 styleClass="one-dialog-select">
                    <f:selectItems value="#{chartBean.chartIntervals}"
                                   var="chartInterval"
                                   itemValue="#{chartInterval}"
                                   itemLabel="#{chartInterval.toString()}"/>
                </p:selectOneMenu>
                <h:outputLabel for="object" value="Object:"/>
                <p:selectCheckboxMenu id="object"
                                      value="#{chartBean.selectedSmartObjects}"
                                      converter="smartObjectConverter"
                                      label="Select object"
                                      filter="true"
                                      filterMatchMode="startsWith"
                                      onHide="executeOnOnhide()"
                                      styleClass="dialog-select">
                    <f:selectItems value="#{chartBean.smartObjects}"
                                   var="smartObject"
                                   itemValue="#{smartObject}"
                                   itemLabel="#{smartObject.name}"/>
                </p:selectCheckboxMenu>
                <h:panelGroup id="subObjectLabel">
                    <h:outputLabel for="subObject" value="Sub object:" rendered="#{not empty chartBean.subObjects}"/>
                </h:panelGroup>
                <h:panelGroup id="subObjectSelect">
                    <p:selectCheckboxMenu id="subObject"
                                          value="#{chartBean.selectedSubObjects}"
                                          converter="smartObjectConverter"
                                          label="Select subobject"
                                          filter="true"
                                          filterMatchMode="startsWith"
                                          onHide="showTitle()"
                                          rendered="#{not empty chartBean.subObjects}"
                                          styleClass="dialog-select">
                        <f:selectItems value="#{chartBean.subObjects}"
                                       var="smartObject"
                                       itemValue="#{smartObject}"
                                       itemLabel="#{smartObject.name}"/>
                    </p:selectCheckboxMenu>
                </h:panelGroup>
                <h:outputLabel for="metric" value="Metric spec:"/>
                <p:selectCheckboxMenu id="metric"
                                      value="#{chartBean.selectedMetricSpecs}"
                                      converter="metricSpecConverter"
                                      label="Select metric"
                                      filter="true"
                                      filterMatchMode="startsWith"
                                      onHide="showTitle()"
                                      styleClass="dialog-select">
                    <f:selectItems value="#{chartBean.metricSpecs}"
                                   var="metricSpec"
                                   itemValue="#{metricSpec}"
                                   itemLabel="#{metricSpec.specName}"/>
                </p:selectCheckboxMenu>
                <h:panelGroup id="titleLabel">
                    <h:outputLabel for="chartName"
                                   value="Chart title:"
                                   rendered="#{chartBean.isRendered()}"/>
                </h:panelGroup>
                <h:panelGroup id="titleInput">
                    <p:inputText id="chartName"
                                 value="#{chartBean.chartTitle}"
                                 rendered="#{chartBean.isRendered()}"
                                 styleClass="dialog-input-chart"/>
                </h:panelGroup>
            </h:panelGrid>
            <p:commandButton value="Submit"
                             action="#{chartBean.addChart()}"
                             update="centerForm"
                             validateClient="true"
                             style="margin-top:10px;"/>

        </h:form>
    </p:dialog>
    <script type="text/javascript">
        var gridster;
        var save = [];
        function saveChartState() {
            console.log(Highcharts.charts);
            var s = gridster.serialize();
            $.each(s, function (pos, chart) {
                save.push({
                    id: Highcharts.charts[pos].options.chart.renderTo,
                    pos: s[pos]
                });
            });
            console.log(save);
            $.ajax({
                url: window.location + 'jsonPositionOption',
                data: JSON.stringify(save),
                contentType: "application/json; charset=utf-8",
                type: 'POST',
                success: function () {
                    console.log('done');
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    alert(xhr.status);
                    alert(thrownError);
                },
                cache: false
            });
        }

        $(function () {
            gridster = $(".gridster  ul").gridster({
                widget_base_dimensions: [$(window).width() / 12, $(window).height() / 12],
                widget_margins: [8, 8],
                helper: 'clone',
                max_cols: ($(window).width() / 12) * 10,
                draggable: {
                    handle: 'header'
                },
                resize: {
                    enabled: true,
                    max_size: [8, 8],
                    min_size: [2, 2],
                    resize: function (e, ui, $widget) {
                        $.each(Highcharts.charts, function (pos, chart) {
                            Highcharts.charts[pos].reflow();
                        });
                    },
                    stop: function (e, ui, $widget) {
                        $.each(Highcharts.charts, function (pos, chart) {
                            Highcharts.charts[pos].reflow();
                        });
                    }
                }
            }).data('gridster');
        });

    </script>

    <p:remoteCommand name="executeOnOnhide"
                     update="chartSettings:subObjectLabel chartSettings:subObjectSelect chartSettings:titleLabel chartSettings:titleInput"
                     action="#{chartBean.changeSelectObject}"/>
    <p:remoteCommand name="showTitle"
                     update="chartSettings:subObjectLabel chartSettings:subObjectSelect chartSettings:titleLabel chartSettings:titleInput"/>

</ui:composition>
